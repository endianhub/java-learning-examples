package com.xh.learn.proxy;import com.xh.learn.proxy.jdk.MyJdkInvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.UndeclaredThrowableException;public class $Proxy1 implements com.xh.learn.service.OrderService {    MyJdkInvocationHandler h;    public $Proxy1(MyJdkInvocationHandler h) {        this.h = h;    }    @Override    public String addOrder(String ver1) {        try {            Method m3 = Class.forName("com.xh.learn.service.OrderService").getMethod("addOrder", Class.forName("java.lang.String"));            return (String) h.invoke(this, m3, new Object[]{ver1});        } catch (RuntimeException | Error var4) {            throw var4;        } catch (Throwable var5) {            throw new UndeclaredThrowableException(var5);        }    }}